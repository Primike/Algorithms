Arrays:
    Easy: [
        try modify given array instead of a new array,
        add extra elements on the sides of array,
        majority element of array use inflection count,
        to find missing elements loop through first making negatives,
    ]

    Medium: [
        bucketSort,
        use pre/postfix products/sums var/array,
        sudoku use / 3 for i manipulation,
        to find consecutive sequences find leftmost in hashSet,
        palindromes use asscci and post/prefix hashes


        prefix/postfix array/resultarray,
        for sequence check if its the leftmost element,
        two pointers increment/decrement only if necessary,
        try to use a dict instead of a value init array,
        try prefixSum in dict for subarray,
    ]

    Medium: 238, 560, 1930, 1963, 2002!!, 438, 523, 179!, 665


Two Pointers:
    Easy: [
        check if new string is palindrome
    ]

    Medium: [
        Iterate through the duplicates count,
        try to inverse array multiple times,
        two pointer shuffle,
    ]

    Easy: 125?, 680,
    Medium: 80!, 15!, 18!!, 189!, 1968


Sliding Window: 
    Easy: [
        can use while/for
    ]

    Easy: 219?
    Medium: 567?


Stack:
    Easy: 
    Medium: 22!


Binary Search:
    Medium: 33


BinaryTree:
    Easy: 543
    Medium: 199, 1448!, 98!


BackTracking:
    [
        Build up for subsets maybe pass in first empty,
        Append parameter at the start of the func,
        Pass in array being built up,
        Increment index each iteration,
        Modify given array each iteration,
    ]
    Medium: 39

1D:
    Easy: 70
