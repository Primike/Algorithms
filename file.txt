Arrays:
    Easy: [
        try modify given array instead of a new array,
        add extra elements on the sides of array,
        majority element of array use inflection count,
        to find missing elements loop through first making negatives,
    ]

    Medium: [
        bucketSort,
        use pre/postfix products/sums var/array,
        sudoku use / 3 for i manipulation,
        to find consecutive sequences find leftmost in hashSet,
        palindromes use asscci and post/prefix hashes
        lexicographically string(int) comparison,
        reset array/dict/set
    ]

    Medium: 238, 560, 1930, 1963, 2002!!, 438, 179, 523, 838!, 665


Two Pointers:
    Medium: [
        Replace instead of swap,
        Update pointers instead of using a Set
        Look for closed cycles they dont interact,
        try to inverse array multiple times,
        two pointer alternate,
    ]

    Easy: 125?, 680?, 26,
    Medium: 80, 18!, 189?, 1968?


Sliding Window: 
    Easy: [
        can use while/for
    ]

    Easy: 219?
    Medium: 567?


Stack:
    Easy: 
    Medium: 22!


Binary Search:
    Medium: 33


BinaryTree:
    Easy: 543
    Medium: 199, 1448!, 98!


BackTracking:
    [
        Build up for subsets maybe pass in first empty,
        Append parameter at the start of the func,
        Pass in array being built up,
        Increment index each iteration,
        Modify given array each iteration,
    ]
    Medium: 39

1D:
    Easy: 70
